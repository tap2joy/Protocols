// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.1
// source: common/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误码枚举
type ErrorCode int32

const (
	ErrorCode_SUCCESS                 ErrorCode = 0
	ErrorCode_UNKNOWN_ERROR           ErrorCode = 1 // 未知错误
	ErrorCode_PARAMETER_ERROR         ErrorCode = 2 // 参数错误
	ErrorCode_USER_NOT_EXIST_ERROR    ErrorCode = 3 // 用户不存在
	ErrorCode_USER_EXIST_ERROR        ErrorCode = 4 // 用户已经存在
	ErrorCode_SERVICE_NOT_EXIST_ERROR ErrorCode = 5 // 服务不存在
	ErrorCode_SERVICE_EXIST_ERROR     ErrorCode = 6 // 服务已经存在
	ErrorCode_CHANNEL_NOT_EXIST_ERROR ErrorCode = 7 // 频道不存在
	ErrorCode_CHANNEL_EXIST_ERROR     ErrorCode = 8 // 频道已经存在
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "SUCCESS",
		1: "UNKNOWN_ERROR",
		2: "PARAMETER_ERROR",
		3: "USER_NOT_EXIST_ERROR",
		4: "USER_EXIST_ERROR",
		5: "SERVICE_NOT_EXIST_ERROR",
		6: "SERVICE_EXIST_ERROR",
		7: "CHANNEL_NOT_EXIST_ERROR",
		8: "CHANNEL_EXIST_ERROR",
	}
	ErrorCode_value = map[string]int32{
		"SUCCESS":                 0,
		"UNKNOWN_ERROR":           1,
		"PARAMETER_ERROR":         2,
		"USER_NOT_EXIST_ERROR":    3,
		"USER_EXIST_ERROR":        4,
		"SERVICE_NOT_EXIST_ERROR": 5,
		"SERVICE_EXIST_ERROR":     6,
		"CHANNEL_NOT_EXIST_ERROR": 7,
		"CHANNEL_EXIST_ERROR":     8,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

// 协议号(message id)
type Mid int32

const (
	Mid_INVALID_MID          Mid = 0
	Mid_C2G_USER_LOGIN       Mid = 100
	Mid_C2G_USER_LOGOUT      Mid = 101
	Mid_C2G_SEND_MESSAGE     Mid = 102
	Mid_C2G_GET_LOGS         Mid = 103
	Mid_C2G_CHANGE_CHANNEL   Mid = 104
	Mid_C2G_GET_CHANNEL_LIST Mid = 105
	Mid_G2C_USER_LOGIN       Mid = 200
	Mid_G2C_USER_LOGOUT      Mid = 201
	Mid_G2C_SEND_MESSAGE     Mid = 202
	Mid_G2C_GET_LOGS         Mid = 203
	Mid_G2C_PUSH_MESSAGE     Mid = 204
	Mid_G2C_KICK_USER        Mid = 205
	Mid_G2C_CHANGE_CHANNEL   Mid = 206
	Mid_G2C_GET_CHANNEL_LIST Mid = 207
)

// Enum value maps for Mid.
var (
	Mid_name = map[int32]string{
		0:   "INVALID_MID",
		100: "C2G_USER_LOGIN",
		101: "C2G_USER_LOGOUT",
		102: "C2G_SEND_MESSAGE",
		103: "C2G_GET_LOGS",
		104: "C2G_CHANGE_CHANNEL",
		105: "C2G_GET_CHANNEL_LIST",
		200: "G2C_USER_LOGIN",
		201: "G2C_USER_LOGOUT",
		202: "G2C_SEND_MESSAGE",
		203: "G2C_GET_LOGS",
		204: "G2C_PUSH_MESSAGE",
		205: "G2C_KICK_USER",
		206: "G2C_CHANGE_CHANNEL",
		207: "G2C_GET_CHANNEL_LIST",
	}
	Mid_value = map[string]int32{
		"INVALID_MID":          0,
		"C2G_USER_LOGIN":       100,
		"C2G_USER_LOGOUT":      101,
		"C2G_SEND_MESSAGE":     102,
		"C2G_GET_LOGS":         103,
		"C2G_CHANGE_CHANNEL":   104,
		"C2G_GET_CHANNEL_LIST": 105,
		"G2C_USER_LOGIN":       200,
		"G2C_USER_LOGOUT":      201,
		"G2C_SEND_MESSAGE":     202,
		"G2C_GET_LOGS":         203,
		"G2C_PUSH_MESSAGE":     204,
		"G2C_KICK_USER":        205,
		"G2C_CHANGE_CHANNEL":   206,
		"G2C_GET_CHANNEL_LIST": 207,
	}
)

func (x Mid) Enum() *Mid {
	p := new(Mid)
	*p = x
	return p
}

func (x Mid) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mid) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[1].Descriptor()
}

func (Mid) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[1]
}

func (x Mid) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mid.Descriptor instead.
func (Mid) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

// 通用错误消息
type SErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SErrorMessage) Reset() {
	*x = SErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SErrorMessage) ProtoMessage() {}

func (x *SErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SErrorMessage.ProtoReflect.Descriptor instead.
func (*SErrorMessage) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *SErrorMessage) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SErrorMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_common_common_proto protoreflect.FileDescriptor

var file_common_common_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d, 0x53, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0xdc, 0x01, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12,
	0x1b, 0x0a, 0x17, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x2a, 0xcd, 0x02, 0x0a, 0x03,
	0x4d, 0x69, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x32, 0x47, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x32, 0x47, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x32, 0x47, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x10, 0x66, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x32, 0x47, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4c,
	0x4f, 0x47, 0x53, 0x10, 0x67, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x32, 0x47, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x68, 0x12, 0x18, 0x0a,
	0x14, 0x43, 0x32, 0x47, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x69, 0x12, 0x13, 0x0a, 0x0e, 0x47, 0x32, 0x43, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0xc8, 0x01, 0x12, 0x14, 0x0a, 0x0f,
	0x47, 0x32, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10,
	0xc9, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x47, 0x32, 0x43, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0xca, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x47, 0x32, 0x43,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x53, 0x10, 0xcb, 0x01, 0x12, 0x15, 0x0a, 0x10,
	0x47, 0x32, 0x43, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x10, 0xcc, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x47, 0x32, 0x43, 0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x10, 0xcd, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x47, 0x32, 0x43, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0xce, 0x01,
	0x12, 0x19, 0x0a, 0x14, 0x47, 0x32, 0x43, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xcf, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x70, 0x32, 0x6a, 0x6f,
	0x79, 0x2f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_common_proto_rawDescOnce sync.Once
	file_common_common_proto_rawDescData = file_common_common_proto_rawDesc
)

func file_common_common_proto_rawDescGZIP() []byte {
	file_common_common_proto_rawDescOnce.Do(func() {
		file_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_common_proto_rawDescData)
	})
	return file_common_common_proto_rawDescData
}

var file_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_common_common_proto_goTypes = []interface{}{
	(ErrorCode)(0),        // 0: ErrorCode
	(Mid)(0),              // 1: Mid
	(*SErrorMessage)(nil), // 2: SErrorMessage
}
var file_common_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_common_proto_init() }
func file_common_common_proto_init() {
	if File_common_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_common_proto_goTypes,
		DependencyIndexes: file_common_common_proto_depIdxs,
		EnumInfos:         file_common_common_proto_enumTypes,
		MessageInfos:      file_common_common_proto_msgTypes,
	}.Build()
	File_common_common_proto = out.File
	file_common_common_proto_rawDesc = nil
	file_common_common_proto_goTypes = nil
	file_common_common_proto_depIdxs = nil
}
